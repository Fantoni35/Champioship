@model LoginViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <title>Login</title>
    <style>
        body {
            background-color: #f0f2f5;
        }

        .login-container {
            max-width: 400px;
            margin: auto;
            padding: 30px;
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        h2 {
            margin-bottom: 20px;
            text-align: center;
            color: #343a40;
        }

        .text-danger, .text-success {
            text-align: center;
            margin-top: 10px;
        }

        .btn-space {
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm fixed-top">
            <div class="container-fluid">
                <h2 style="color:white">ChampionshipWebApp</h2>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
            </div>
        </nav>
    </header>

    <div class="login-container">
        <h2>Login</h2>



        @if (!string.IsNullOrEmpty(ViewBag.RegistrationSuccessMessage))
        {
            <div class="text-success">@ViewBag.RegistrationSuccessMessage</div>
        }

        <form asp-action="Login" method="post">
            <div class="form-group">
                <label asp-for="Username" class="form-label"></label>
                <input asp-for="Username" maxlength="30" class="form-control" value="@ViewData["Username"]" placeholder="Insert your username" />
            </div>
            <div class="form-group">
                <label asp-for="Password" class="form-label"></label>
                <input asp-for="Password" maxlength="30" type="password" class="form-control" placeholder="Insert your password" />
            </div>
            <div class="d-flex justify-content-between">
                <button type="submit" class="btn btn-primary btn-block btn-space">Login</button>
                <button type="button" class="btn btn-secondary btn-space" data-toggle="modal" data-target="#registerModal">Register</button>
            </div>
        </form>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="text-danger">Incorrect credentials, please try again or register if you don't have an account.</div>
        }

    </div>

    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="registerModalLabel">Register</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group text-center">
                        <label for="languageSelect">Select Language:</label>
                        <select id="languageSelect" class="form-control" style="max-width: 200px; margin: 0 auto;">
                            <option value="en">English</option>
                            <option value="it">Italiano</option>
                        </select>
                    </div>
                    <form id="registrationForm" method="post" asp-action="Register">
                        <div class="form-group">
                            <label for="newUsername">Username</label>
                            <input type="text" id="newUsername" maxlength="30" name="Username" class="form-control" required placeholder="Insert your username">
                        </div>
                        <div class="form-group">
                            <label for="newPassword">Password</label>
                            <input type="password" id="newPassword" maxlength="30" name="Password" class="form-control" required placeholder="Insert your password">
                            <div class="invalid-feedback">Password cannot contain spaces.</div>
                        </div>

                        <button type="submit" class="btn btn-primary" id="registerButton">Register</button>
                    </form>

                    @if (!string.IsNullOrEmpty(ViewBag.RegistrationError))
                    {
                        <div class="text-danger mt-2" id="registrationMessage">@ViewBag.RegistrationError</div>
                    }

                    @if (!string.IsNullOrEmpty(ViewBag.UsernameInUseMessage))
                    {
                        <div class="text-danger mt-2" id="usernameInUseMessage">@ViewBag.UsernameInUseMessage</div>
                    }
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            var showRegisterModal = '@(ViewBag.ShowRegisterModal != null && (bool)ViewBag.ShowRegisterModal)';
            if (showRegisterModal === 'True') {
                $('#registerModal').modal('show');
            }

            // Nascondi il messaggio di errore quando il modale viene chiuso
            $('#registerModal').on('hidden.bs.modal', function () {
                $('#registrationMessage').text('');  // Rimuovi il testo di errore
                $('#usernameInUseMessage').text(''); // Rimuovi il testo di errore
                $('#newPassword').removeClass('is-invalid');
                $('#registerButton').prop('disabled', false);
            });

            $('#newPassword').on('input', function () {
                var password = $(this).val();
                if (/\s/.test(password)) {
                    $(this).addClass('is-invalid');
                    $('.invalid-feedback').text('Password cannot contain spaces.');
                    $('#registerButton').prop('disabled', true);
                } else {
                    $(this).removeClass('is-invalid');
                    $('#registerButton').prop('disabled', false);
                }
            });
        });
    </script>

</body>
</html>
